
项目描述 
abstract、 override、 new、 virtual、 sealed的使用示例

abstract
说明：
abstract为修饰符，用于标记类、方法。修饰类为抽象类，修改方法为抽象方法。抽象类无法进行实例化，只能作为基类使用，可以包含抽象方法和普通方法。抽象方法只能是在抽象类中，没有方法体，由派生类进行实现。如果派生类不进行实现，那么派生类也必须为抽象类。
特征：
1、抽象类不能实例化；
2、抽象类的派生类必须实现抽象类中的抽象方法，如果没有实现则派生类也必须是抽象类；
3、抽象方法没有方法体，由派生类进行实现；
4、抽象方法必须在抽象方法中声明；
5、抽象方法不能使用static、virtual修饰符；

override
说明：
override为关键字，用于标记方法，表明对基类中abstract、virtual、overrid方法的重写。
特征：
1、override只能重写基类中的由virtual标记的方法；
2、override的方法与基类中的virtual方法的访问权限相同；
3、override修饰的方法不能再用new、static、virtual、abstract进行修饰；
4、override重写的必须是基类中abstract、virtual、overrid的方法；

new
说明：
new 作为关键字用于进行实例化对象、隐藏方法、参数约束。
特征：
1、作为运算符创建类的一个对象；
2、作为派生类的隐藏修饰符；
3、泛型声明中约束可能作用类型参数的参数类型

virtual
说明：
virtual 作为关键字标识方法允许在派生类中进行重写；
特征：
1、不可与static、abstract、private、override一起修饰；
2、virtual修饰方法在派生类中允许使用override进行重写；

sealed
说明：
sealed 保护类或方法。修饰类则不允许该类进行派生子类，修饰方法则不允许方法被重写（使用override修饰）或隐藏（使用new修饰）且必须在该类中必须实现；
特征：
1、sealed类无法被继承；
2、sealed方法只能修饰派生类中重写的方法；
3、sealed方法必须在派生类中进行实现；
4、sealed方法无法再次在其派生类中进行重写；

new/override修饰派生类方法时的区别：
new 在修饰派生类方式时是隐藏基类的普通方法，在以派生类实例化基类时，调用方法将直接调用基类的方法。
override 在修饰派生类方式时是对基类中abstract、virtual、override方法重写,在以派生类实例化基类时，调用方法将直接调用派生类的方法。

原理：
new修饰派生类中方法是直接对基类中的普通方法的隐藏操作，在编译器编译时直接使用默认的方式进行编译。编辑器默认编译方式是以左侧类型进行编译为原则，即在new使用隐藏基类普通方法时，编译器编译时将会忽略使用实例类的相同方法。
override修饰派生类中方式是对abstract、virtual、override方法重写。编译器对override修饰符修饰的类型做个特殊处理，使其在运行时才对进行解析。因此其是根据使用的实例化类对象最为使用。